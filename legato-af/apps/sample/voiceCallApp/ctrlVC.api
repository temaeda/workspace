//--------------------------------------------------------------------------------------------------
/**
 *
 * This API is used by the controller to control the flow of the application. Certain arguments are
 *  passed from the command line to the application using the controller and the functions
 *  provided by this API.
 * <HR>
 *
 * Copyright (C) Sierra Wireless Inc.
 */
//--------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
/**
* Get the phone number specified on the command line and start voice call to the destination number.
*
* @return
*      - LE_OK              If voice call can be successfully made to the destination.
*      - LE_BUSY            If there is already an active voice call.
*      - LE_FAULT           If not able to initiate voice call.
*/
//-------------------------------------------------------------------------------------------------
FUNCTION le_result_t MakeCall
(
string argPtr [20] IN
);

//-------------------------------------------------------------------------------------------------
/**
* This function changes the path to the .wav file to the specified path on the command line.
* If user specifies "default", path is reset to the default piano.wav included with the app.
*
* @return
*      - LE_OK              If wav file exists and path to audio file is successfully changed.
*      - LE_FAULT           If path was not changed.
*/
//-------------------------------------------------------------------------------------------------
FUNCTION le_result_t SetWav
(
    string argPtr [4096] IN,
    bool setAudioToDefaultFlag IN
);

//-------------------------------------------------------------------------------------------------
/**
* End any active voice call. Also ends incoming or outgoing calls which are not yet connected.
*
* @return
*       - LE_OK             If call is successfully ended.
*       - LE_NOT_FOUND      If the voice call object reference is not found.
*       - LE_FAULT          If end call cannot be processed.
*/
//-------------------------------------------------------------------------------------------------
FUNCTION le_result_t HangupCall
(
);

//-------------------------------------------------------------------------------------------------
/**
* Answer an incoming call.
*
* @return
*       - LE_OK             If incoming call is successfully connected.
*       - LE_NOT_FOUND      Incoming voice call object reference is not found.
*/
//-------------------------------------------------------------------------------------------------
FUNCTION le_result_t AnswerCall
(
);

//-------------------------------------------------------------------------------------------------
/**
* Call the last dialed number.
*
* @return
*      - LE_OK              If redial is processed successfully.
*      - LE_FAULT           If not able to perform redial.
*/
//-------------------------------------------------------------------------------------------------
FUNCTION le_result_t Redial
(
    //Empty
);

//-------------------------------------------------------------------------------------------------
/**
* Place the active call on hold by disabling all audio input from mic and connecting input stream
* to the file pointed to by AudioFilePath
*
* @return
*      - LE_OK              If hold is processed successfully.
*      - LE_FAULT           If hold is not possible.
*/
//-------------------------------------------------------------------------------------------------
FUNCTION le_result_t HoldCall
(
);

//-------------------------------------------------------------------------------------------------
/**
* Unhold the active call which is currently on hold by disconnecting the .wav file from the
* input stream and connecting the mic to the input stream.
*
* @return
*      - LE_OK              If unhold is processed successfully.
*      - LE_FAULT           If unhold is not possible.
*/
//-------------------------------------------------------------------------------------------------
FUNCTION le_result_t UnholdCall
(
);